***********************************************************************
*********** a Collaborative, Open, Webcrawler (COW) *******************
***********                                         *******************
*************       (c) Pierre Jourlin 2011-2012  *********************
***************      http://www.jourlin.com    ************************
***********************************************************************

- For approved developpers only : 
> sudo apt-get git-core 
> ssh-keygen -t rsa -C "your_email@youremail.com"
> send the file .ssh/id_rsa.pub to pierre.jourlin@univ-avignon.fr to be added.
> wait for confirmation
> git clone git@github.com:jourlin/WebCrawler.git
> cd WebCrawler

- Install : 
0. if needed, install GNU/gcc and PostgreSQL in your O.S.
you will also need the following packages : libecpg-dev, libcurl3-dev
1. make sql/CreateTables.sql or simply execute the sql 
commands its contains on your database.
e.g. : psql -Umyrole -dmybase -W -f "sql/CreateTables.sql"
2. edit ecpg/Anelosimus.Eximius.pgc and include your database 
details in the source (lines 99-101 and 386-388)
3. mkdir bin
3. make bin/Anelosimus.Eximius
4. insert a few starting urls in the table "node". 
Except "url" and "tld", all values should be set to NULL.
5. bin/Anelosimus.Eximius & 
6. the above will start a process that crawls a maximum of 20 urls in parrallel. If another max is needed, change the value of MAXCO at line 63 and the value after "LIMIT" at line 394... 
You can start any number of processes on any number of machines. 
7. the crawl strategy is described as a simple SQL query that fetch 
the urls to be crawled. e.g. : 
Anelosimus.Eximius.pgc, line 394 : 
exec sql PREPARE get_url FROM "SELECT url, id FROM node WHERE checked IS NULL ORDER BY score DESC, length(urlpath) ASC LIMIT 20 FOR UPDATE ;";
(here the process fetches the 20 highest scored URL with shortest urlpath that were not yet visited (score is 1.0 for ".fr" top level domains and 0 for others).If you need to change this strategy, simply edit this line and go to step 3.
The score is calculated in insertURL() at lines 263-266.

*** note *** Updating the sources on github : 
- git commit -a
- git push -u origin master
***** Uptadng from github :
- git pull -u origin master

